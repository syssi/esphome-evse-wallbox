substitutions:
  name: evse-wallbox
  config_name: "${name} config"
  device_description: "Monitor and control a EVSE wallbox via RS485 (Modbus)"
  external_components_source: github://syssi/esphome-evse-wallbox@main
  tx_pin: GPIO16
  rx_pin: GPIO17

esphome:
  name: ${name}
  comment: ${device_description}
  project:
    name: "syssi.esphome-evse-wallbox"
    version: 1.0.0

esp32:
  board: wemos_d1_mini32
  framework:
    type: esp-idf

external_components:
  - source: ${external_components_source}
    refresh: 0s

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
logger:

# If you use Home Assistant please remove this `mqtt` section and uncomment the native `api` component!
# api:

mqtt:
  broker: !secret mqtt_host
  username: !secret mqtt_username
  password: !secret mqtt_password
  id: mqtt_client

uart:
  id: uart0
  baud_rate: 9600
  tx_pin: ${tx_pin}
  rx_pin: ${rx_pin}
  debug:
    direction: BOTH

modbus:
  id: modbus0
  uart_id: uart0
  send_wait_time: 0ms

evse_wallbox:
  id: evse0
  modbus_id: modbus0
  update_interval: 2s
  firmware_version: 18

binary_sensor:
  - platform: evse_wallbox
    relay:
      name: "${name} relay"
    diode_check_failed:
      name: "${name} diode check failed"
    ventilation_failed:
      name: "${name} ventilation failed"
    waiting_for_pilot_release:
      name: "${name} waiting for pilot release"
    rcd_test_in_progress:
      name: "${name} rcd test in progress"
    rcd_check_error:
      name: "${name} rcd check error"

button:
  - platform: evse_wallbox
    turn_off_charging:
      name: "${name} turn off charging"
    start_self_test:
      name: "${name} start self-test"
    clear_rcd_error:
      name: "${name} clear rcd error"

number:
  - platform: evse_wallbox
    output_current_setting:
      name: "${name} output current setting"
    output_current_default:
      name: "${name} output current default"
    min_charging_current:
      name: "${name} minimum charging current"

sensor:
  - platform: evse_wallbox
    output_current_setting:
      name: "${name} output current setting"
    output_current:
      name: "${name} output current"
    vehicle_status_code:
      name: "${name} vehicle status code"
    cable_limit_detected:
      name: "${name} cable limit detected"
    last_command_bitmask:
      name: "${name} last command bitmask"
    firmware_version:
      name: "${name} firmware version"
    operation_mode_code:
      name: "${name} operation mode code"
    error_bitmask:
      name: "${name} error bitmask"
    error_timeout_countdown:
      name: "${name} error timeout countdown"
    self_test_timeout_countdown:
      name: "${name} self-test timeout countdown"
    config_bits:
      name: "${config_name} config bits"

switch:
  - platform: evse_wallbox
    current_change_by_button:
      name: "${config_name} current change by button"
    stop_charging_on_button_press:
      name: "${config_name} stop charging on button press"
    pilot_ready_state_led_always_on:
      name: "${config_name} pilot ready state led always on"
    charging_of_vehicle_status_d:
      name: "${config_name} charging of vehicle status d"
    rcd_feedback_on_mclr_pin:
      name: "${config_name} rcd feedback on mclr pin"
    auto_clear_rcd_error:
      name: "${config_name} auto clear rcd error"
    an_internal_pullup:
      name: "${config_name} an internal pullup"
    disable_evse_after_charge:
      name: "${config_name} disable evse after charge"
    disable_evse:
      name: "${config_name} disable evse"
    bootloader_mode:
      name: "${config_name} bootloader mode"

text_sensor:
  - platform: evse_wallbox
    vehicle_status:
      name: "${name} vehicle status"
    last_command:
      name: "${name} last command"
    operation_mode:
      name: "${name} operation mode"
    errors:
      name: "${name} errors"
